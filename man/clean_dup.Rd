% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_dup.R
\name{clean_dup}
\alias{clean_dup}
\title{Function to thin longitude and latitude data}
\usage{
clean_dup(
  data,
  longitude,
  latitude,
  threshold = 0,
  by_mask = FALSE,
  raster_mask = NULL,
  n_ngbs = 0
)
}
\arguments{
\item{data}{A data.frame with longitude and latitude of occurrence records}

\item{longitude}{A character vector indicating the column name of the
"longitude" variable.}

\item{latitude}{A character vector indicating the column name of the
"latitude" variable.}

\item{threshold}{A numeric value representing the euclidean distance between
coordinates to be considered as a duplicate.}

\item{by_mask}{Logical. If TRUE data thinning will be done
using a raster layer as a mask.}

\item{raster_mask}{An object of class SpatRaster that will be used a
reference to identify duplicates.}

\item{n_ngbs}{Number of pixels used to define the neighborhood matrix that
helps to determine which occurrences are duplicates.
\itemize{
\item A value of 0 removes occurrences within the same pixel, keeping one.
\item A value of 1 considers as duplicates all occurrences within a
distance of one pixel.
}}
}
\value{
Returns a data.frame with coordinate data from a species
}
\description{
Thin duplicated or redundant occurrence records that
present overlapping longitude and latitude coordinates. The user can thin
occurrences using a geographical distance threshold or by a pixel
neighborhood.
}
\examples{
data(abronia)
tempora_layers_dir <- system.file("extdata/bio",package = "tenm")
tenm_mask <- terra::rast(file.path(tempora_layers_dir,"1939/bio_01.tif"))
# Clean duplicates without raster mask (just by distance threshold)
# First check the number of occurrence records
print(nrow(abronia))
# Clean duplicated records using a distance of ~ 18 km (0.1666667 grades)
ab_1 <- tenm::clean_dup(data =abronia,
                        longitude = "decimalLongitude",
                        latitude = "decimalLatitude",
                        threshold = terra::res(tenm_mask),
                        by_mask = FALSE,
                        raster_mask = NULL)
# Check number of records
print(nrow(ab_1))
# Clean duplicates using a raster mask
ab_2 <- tenm::clean_dup(data =abronia,
                        longitude = "decimalLongitude",
                        latitude = "decimalLatitude",
                        threshold = terra::res(tenm_mask)[1],
                        by_mask = TRUE,
                        raster_mask = tenm_mask,
                        n_ngbs = 1)
# Check number of records
print(nrow(ab_2))
}
