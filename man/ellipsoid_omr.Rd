% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ellipsoid_omr.R
\name{ellipsoid_omr}
\alias{ellipsoid_omr}
\title{ellipsoid_omr}
\usage{
ellipsoid_omr(
  env_data,
  env_test = NULL,
  env_bg,
  cf_level,
  mve = TRUE,
  proc = FALSE,
  proc_iter = 100,
  rseed = TRUE
)
}
\arguments{
\item{env_data}{A data frame with the environmental data.}

\item{env_test}{A data frame with the environmental testing data. The default
is NULL if given the selection process will show the p-value of a binomial
test.}

\item{env_bg}{Environmental data to compute the approximated prevalence of
the model. The data should be a sample of the environmental layers of the
calibration area.}

\item{cf_level}{Proportion of points to be included in the ellipsoids. This
parameter is equivalent to the error (E) proposed by Peterson et al. (2008).}

\item{mve}{A logical value. If TRUE a minimum volume ellipsoid will be
computed using
the function \code{\link[MASS]{cov.rob}} of the \pkg{MASS} package. If False
the covariance matrix of the input data will be used.}

\item{proc}{Logical if TRUE a partial roc test will be run.}

\item{proc_iter}{Numeric. The total number of iterations for the partial ROC
bootstrap.}

\item{rseed}{Logical. Whether or not to set a random seed for partial roc
bootstrap. Default TRUE.}
}
\value{
A data.frame with 5 columns: i) "fitted_vars" the names of variables
that were fitted; ii) "om_rate" omission rates of the model; iii)
"bg_prevalence" approximated prevalence of the model see details section.
}
\description{
Compute the omission rate of ellipsoid models
}
\examples{
\dontrun{
library(tenm)
data("abronia")
tempora_layers_dir <- system.file("extdata/bio",package = "tenm")
abt <- tenm::sp_temporal_data(occs = abronia,
                              longitude = "decimalLongitude",
                              latitude = "decimalLatitude",
                              sp_date_var = "year",
                              occ_date_format="y",
                              layers_date_format= "y",
                              layers_by_date_dir = tempora_layers_dir,
                              layers_ext="*.tif$")
abtc <- tenm::clean_dup_by_date(abt,threshold = 10/60)
#This code is for running in parallel
future::plan("multisession",workers=2)
abex <- tenm::ex_by_date(this_species = abtc,train_prop=0.7)
abbg <- tenm::bg_by_date(this_species = abex,
                         buffer_ngbs=10,n_bg=50000)
future::plan("sequential")
edata <- abex$env_data
etrain <- edata[edata$trian_test=="Train",c("bio_05","bio_06","bio_12")]
etest <- edata[edata$trian_test=="Test",c("bio_05","bio_06","bio_12")]
bg <- abbg$env_bg[,c("bio_05","bio_06","bio_12")]
eor <- ellipsoid_omr(env_data=etrain,env_test=etest,env_bg=bg,
                     cf_level=0.975,proc=TRUE)
eor
}
}
