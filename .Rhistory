})
df_res <- data.frame(ID_YEAR,df_year)
return(df_res)
})
bg_env <- data.frame(ID_YEAR = bg_env[,1],xys,bg_env[,-1])
bg_env
furrr::future_map_dfc
seq_along(bg_env$ID_YEAR)
x=1
y=1
ID_YEAR <- rep(bg_env$ID_YEAR[[x]],length(bg_env[[3]][[x]]))
ID_YEAR
df_year <- seq_along(bg_env[-(1:2)]) |> furrr::future_map_dfc(function(y){
data <- bg_env[-(1:2)]
value <- data[[y]][[x]]
df1 <- data.frame(value)
names(df1) <- names(data[y])
return(df1)
},.progress = TRUE,.options = furrr::furrr_options(seed = NULL))
df_year
df_year <- seq_along(bg_env[-(1:2)]) |> purrr::map_dfc(function(y){
data <- bg_env[-(1:2)]
value <- data[[y]][[x]]
df1 <- data.frame(value)
names(df1) <- names(data[y])
return(df1)
},.progress = TRUE,.options = furrr::furrr_options(seed = NULL))
df_year <- seq_along(bg_env[-(1:2)]) |> purrr::map_dfc(function(y){
data <- bg_env[-(1:2)]
value <- data[[y]][[x]]
df1 <- data.frame(value)
names(df1) <- names(data[y])
return(df1)
})
bg_env <-   seq_along(bg_env$ID_YEAR) |> furrr::future_map_dfr(function(x){
ID_YEAR <- rep(bg_env$ID_YEAR[[x]],length(bg_env[[3]][[x]]))
df_year <- seq_along(bg_env[-(1:2)]) |> purrr::map_dfc(function(y){
data <- bg_env[-(1:2)]
value <- data[[y]][[x]]
df1 <- data.frame(value)
names(df1) <- names(data[y])
return(df1)
})
df_res <- data.frame(ID_YEAR,df_year)
return(df_res)
},.progress = TRUE,.options = furrr::furrr_options(seed = NULL))
bg_env <- data.frame(ID_YEAR = bg_env[,1],xys,bg_env[,-1])
bg_env
bg_env <-   seq_along(bg_env$ID_YEAR) |> furrr::future_map_dfr(function(x){
ID_YEAR <- rep(bg_env$ID_YEAR[[x]],length(bg_env[[3]][[x]]))
df_year <- seq_along(bg_env[-(1:2)]) |> purrr::map_dfc(function(y){
data <- bg_env[-(1:2)]
value <- data[[y]][[x]]
df1 <- data.frame(value)
names(df1) <- names(data[y])
return(df1)
})
df_res <- data.frame(ID_YEAR,df_year)
return(df_res)
},.progress = TRUE,.options = furrr::furrr_options(seed = NULL,
globals = c("bg_env")))
bg_env <- data.frame(ID_YEAR = bg_env[,1],xys,bg_env[,-1])
sp.temp.data.env <- list(temporal_df = tdf,
sp_date_var = this_species$sp_date_var,
lon_lat_vars =this_species$lon_lat_vars,
layers_ext= this_species$layers_ext,
env_bg = bg_env)
sp.temp.data.env
library(tenm)
rm(list=ls())
library(tenm)
data("abronia")
tempora_layers_dir <- system.file("extdata/bio",package = "tenm")
abt <- tenm::sp_temporal_data(occs = abronia,
longitude = "decimalLongitude",
latitude = "decimalLatitude",
sp_date_var = "year",
occ_date_format="y",
layers_date_format= "y",
layers_by_date_dir = tempora_layers_dir,
layers_ext="*.tif$")
abtc <- tenm::clean_dup_by_date(abt,threshold = 10/60)
future::plan("multisession",workers=2)
abex <- tenm::ex_by_date(this_species = abtc,
train_prop=0.7)
abbg <- tenm::bg_by_date(abex,
buffer_ngbs=10,n_bg=50000)
future::plan("sequential")
abbg
this_species=abbg
cls <- class(this_species)
cls
if(length(cls)==1L && methods::is(this_species,"sp.temporal.env")){
df_base <- this_species$temporal_df
swd_df <- data.frame(sp_name,df_base[,-c(4,5,6,ncol(df_base))])
}
"sp.temporal.bg" %in% cls
df_base <- this_species$env_bg
years <- as.numeric(basename(df_base$ID_YEAR))
years
ncols <- ncol(df_base)
ncols
df_base
#ncols <- ncol(df_base)
swd_df <- data.frame(sp_name="background",year=years,
df_base[,-c(1)])
swd_df
df_base
#ncols <- ncol(df_base)
swd_df <- data.frame(sp_name="background",
df_base[,c(2,3)],
year=years,df_base[,-c(1,2,3)])
swd_df
library(tenm)
library(tenm)
data("abronia")
tempora_layers_dir <- system.file("extdata/bio",package = "tenm")
abt <- tenm::sp_temporal_data(occs = abronia,
longitude = "decimalLongitude",
latitude = "decimalLatitude",
sp_date_var = "year",
occ_date_format="y",
layers_date_format= "y",
layers_by_date_dir = tempora_layers_dir,
layers_ext="*.tif$")
abtc <- tenm::clean_dup_by_date(abt,threshold = 10/60)
future::plan("multisession",workers=2)
abex <- tenm::ex_by_date(this_species = abtc,
train_prop=0.7)
abbg <- tenm::bg_by_date(abex,
buffer_ngbs=10,n_bg=50000)
future::plan("sequential")
occ_swd <- tdf2swd(this_species=abex,sp_name="abronia")
library(tenm)
occ_swd <- tdf2swd(this_species=abex,sp_name="abro_gram")
occ_swd
bg_swd <- tdf2swd(this_species=abbg)
bg_swd
library(tenm)
pkgdown::build_site()
usethis::use_readme_rmd()
library(tenm)
data("abronia")
head(abronia)
devtools::build_readme()
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.3)
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.3,
xlab="Longitude",ylab="latitude")
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.3,
xlab="Longitude",ylab="Latitude")
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
par(mar=c(1,1,1,1))
par(mar=c(1,1,1,1))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
par(mar=c(2,1,1,1))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
par(mar=c(2,2,1,1))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
par(mar=c(2,2,1,1))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
par(mar=c(2,2,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
par(mar=c(3,2,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
par(mar=c(4,2,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
unique(abronia$year)
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude")
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude",xlim=c(-99,96))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude",xlim=c(-99,-96))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude",xlim=c(-99,-96.5))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.5))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.15))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.5,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
?legend
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)),text.width = 1:4 / 50)
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = levels(as.factor(abronia$year)))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=as.factor(abronia$year),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = terrain.colors(length(abronia$year)))
terrain.colors(length(abronia$year))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=terrain.colors(length(abronia$year)),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = terrain.colors(length(abronia$year)))
?terrain.colors
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=hcl.colors(length(abronia$year)),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = hcl.colors(length(abronia$year)))
op <- par(cex = 1.5)
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=hcl.colors(length(abronia$year)),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = hcl.colors(length(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=hcl.colors(length(abronia$year)),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
pch=19,col = hcl.colors(length(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=hcl.colors(length(abronia$year)),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
cex=0.5,pt.cex = 1,
pch=19,col = hcl.colors(length(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=hcl.colors(length(abronia$year)),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year)),
cex=0.75,pt.cex = 1,
pch=19,col = hcl.colors(length(abronia$year)))
sort(unique(abronia$year))
length(sort(unique(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=hcl.colors(length(abronia$year)),pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year))[1:16],
cex=0.75,pt.cex = 1,
pch=19,col = hcl.colors(length(abronia$year)))
colorss <- hcl.colors(length(abronia$year))
colorss
colorss <- hcl.colors(length(unique(abronia$year)))
colorss
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=colorss,pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
colorss <- hcl.colors(length(unique(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=colorss,pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year))[1:16],
cex=0.75,pt.cex = 1,
pch=19,col =colorss[1:16])
colorss <- hcl.colors(length(unique(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=colorss,pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year))[1:20],
cex=0.75,pt.cex = 1,
pch=19,col =colorss[1:20])
colorss <- hcl.colors(length(unique(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=colorss,pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year))[1:20],
cex=0.75,pt.cex = 1,
pch=19,col =colorss[1:20])
legend("bottomright",legend = sort(unique(abronia$year))[21:length(unique(abronia$year))],
cex=0.75,pt.cex = 1,
pch=19,col =colorss[21:length(unique(abronia$year))])
colorss <- hcl.colors(length(unique(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=colorss,pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.5,-96.8))
legend("bottomleft",legend = sort(unique(abronia$year))[1:20],
cex=0.75,pt.cex = 1,bty = "n",
pch=19,col =colorss[1:20])
legend("bottomright",
legend = sort(unique(abronia$year))[21:length(unique(abronia$year))],
cex=0.75,pt.cex = 1,bty = "n",
pch=19,col =colorss[21:length(unique(abronia$year))])
colorss <- hcl.colors(length(unique(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=colorss,pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.25,-96.7))
legend("bottomleft",legend = sort(unique(abronia$year))[1:20],
cex=0.75,pt.cex = 1,bty = "n",
pch=19,col =colorss[1:20])
legend("bottomright",
legend = sort(unique(abronia$year))[21:length(unique(abronia$year))],
cex=0.75,pt.cex = 1,bty = "n",
pch=19,col =colorss[21:length(unique(abronia$year))])
colorss <- hcl.colors(length(unique(abronia$year)))
par(mar=c(4,4,2,2))
plot(abronia$decimalLongitude, abronia$decimalLatitude,
col=colorss,pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.35,-96.7))
legend("bottomleft",legend = sort(unique(abronia$year))[1:20],
cex=0.75,pt.cex = 1,bty = "n",
pch=19,col =colorss[1:20])
legend("bottomright",
legend = sort(unique(abronia$year))[21:length(unique(abronia$year))],
cex=0.75,pt.cex = 1,bty = "n",
pch=19,col =colorss[21:length(unique(abronia$year))])
?tenm::clean_dup
# Load a modeling layer
tempora_layers_dir <- system.file("extdata/bio",package = "tenm")
tenm_mask <- terra::rast(file.path(tempora_layers_dir,"1939/bio_01.tif"))
tenm_mask
tempora_layers_dir <- system.file("extdata/bio",package = "tenm")
tenm_mask <- terra::rast(file.path(tempora_layers_dir,"1939/bio_01.tif"))
ab_1 <- tenm::clean_dup(data =abronia,
longitude = "decimalLongitude",
latitude = "decimalLatitude",
threshold = terra::res(tenm_mask),
by_mask = FALSE,
raster_mask = NULL)
ab_1
tidyr::as_tibble(ab_1)
data("abronia")
head(abronia)
dim(abronia)
dim(abronia)
ab_by_mask <- tenm::clean_dup(data =abronia,
longitude = "decimalLongitude",
latitude = "decimalLatitude",
threshold = terra::res(tenm_mask),
by_mask = TRUE,
raster_mask = tenm_mask)
tidyr::as_tibble(ab_by_mask)
?tenm::sp_temporal_data
tempora_layers_dir <- system.file("extdata/bio",package = "tenm")
print(tempora_layers_dir)
list.dirs(tempora_layers_dir)
head(list.files(list.dirs(tempora_layers_dir)[2]))
head(list.files(list.dirs(tempora_layers_dir)[2],pattern = ".tif$"))
head(list.dirs(tempora_layers_dir)[-1])
head(list.files(list.dirs(tempora_layers_dir)[2],pattern = ".tif$"))
list.files(list.dirs(tempora_layers_dir)[2],pattern = ".tif$")
list.dirs(tempora_layers_dir,full.names = FALSE)
list.dirs(tempora_layers_dir,recursive = FALSE)
abt <- tenm::sp_temporal_data(occs = abronia,
longitude = "decimalLongitude",
latitude = "decimalLatitude",
sp_date_var = "year",
occ_date_format="y",
layers_date_format= "y",
layers_by_date_dir = tempora_layers_dir,
layers_ext="*.tif$")
abt
# See the temporal data.frame
tidyr::as_tibble(headabt$temporal_df)
# See the names of the slots
names(abt)
abt$sp_date_var
tidyr::as_tibble(head(abt$temporal_df))
?tenm::ex_by_date
future::plan("multisession",workers=2)
abex <- tenm::ex_by_date(this_species = abtc,
train_prop=0.7)
future::plan("sequential")
abex
abtc
abt
abex$temporal_df
future::plan("multisession",workers=2)
abbg <- tenm::bg_by_date(this_species = abex,
buffer_ngbs=10,n_bg=10000)
future::plan("sequential")
abbg
# SWD table for occurrence records
occ_swd <- tdf2swd(this_species=abex,sp_name="abro_gram")
occ_swd <- tdf2swd(this_species=abex,sp_name="abro_gram")
# SWD table for background data
bg_swd <- tdf2swd(this_species=abbg)
occ_swd
abt
plot(ab_1$decimalLongitude, ab_1$decimalLatitude,
col=colorss,pch=19, cex=0.75,
xlab="Longitude",ylab="Latitude",xlim=c(-98.35,-96.7))
legend("bottomleft",legend = sort(unique(ab_1$year))[1:10],
cex=0.85,pt.cex = 1,bty = "n",
pch=19,col =colorss[1:20])
colors2
colors2 <- hcl.colors(length(unique(abtc$temporal_df$year)))
colors2
ab_1
abt
varcorrs <- tenm::correlation_finder(environmental_data =
abex$env_data[,-ncol(abex$env_data)],
method = "spearman",
threshold = 0.8,
verbose = FALSE)
varcorrs
mod_sel <- tenm::tenm_selection(this_species = abbg,
omr_criteria =0.1,
ellipsoid_level=0.975,
vars2fit = vars2fit,
nvars_to_fit=c(2,3,4,5,6,7),
proc = T,
RandomPercent = 50,
NoOfIteration=1000,
parallel=TRUE,
n_cores=4)
varcorrs <- tenm::correlation_finder(environmental_data =
abex$env_data[,-ncol(abex$env_data)],
method = "spearman",
threshold = 0.8,
verbose = FALSE)
# Selected variables
vars2fit <- varcorrs$descriptors
print(vars2fit)
mod_sel <- tenm::tenm_selection(this_species = abbg,
omr_criteria =0.1,
ellipsoid_level=0.975,
vars2fit = vars2fit,
nvars_to_fit=c(2,3,4,5,6,7),
proc = T,
RandomPercent = 50,
NoOfIteration=1000,
parallel=TRUE,
n_cores=4)
mod_sel
names(mod_sel)
list.dirs(tempora_layers_dir,
recursive = FALSE)
env_layers_2016 <- list.dirs(tempora_layers_dir,
recursive = FALSE)[32]
suit_2016 <- predict(mod_sel,
model_variables = c("bio_01","bio_03","bio_12"),
layers_path =env_layers_2016 ,
layers_ext = ".tif$")
rgl::rglwidget()
layers_70_00_dir <- system.file("extdata/bio_1970_2000",package = "tenm")
suit_1970_2000 <- predict(mod_sel,
model_variables = c("bio_01","bio_03","bio_12"),
layers_path = layers_70_00_dir,
layers_ext = ".tif$")
rgl::rglwidget()
pkgdown::build_site()
pkgdown::build_site()
